[tox]
envlist =
	# Vary Neo4j & Pandas versions
	py{39, 310}-neo4j{4,5}-pandas{1,2}-main-{standard,encrypted},
	# Vary Pandas 1.x + PyArrow
	py{39,310}-pandas1-pyarrow{16, 17, 18, 19}-main-{standard,encrypted},
	py311-pandas1-pyarrow{15,16, 17, 18, 19}-main-{standard,encrypted},
	# Vary Pandas 2.x + PyArrow
	py{39,310,311}-pandas2-pyarrow{18, 19}-main-{standard,encrypted},
	# Vary Python version
	py3{12,13}-pandas2-pyarrow{19}-main-{standard,encrypted},

	# PR envs
	py{39,310}-neo4j{4,5}-pullrequest-{standard,encrypted},
	py{311,312,313}-pullrequest-{standard,encrypted},

	# Aura
	py311-main-aura,

	# Session tests
	py39-neo4j{5}-pyarrow16-main-{cloud-architecture}
	py39-pullrequest-{cloud-architecture}

	# Vary networkx versions only for relevant tests
	py311-neo4j{4,5}-pandas1-pyarrow7-networkx{2,3}-main-nx
	py311-neo4j{4,5}-pandas2-pyarrow18-networkx{2,3}-main-nx
	py311-networkx3-pullrequest-nx

	# Notebooks
	jupyter-notebook-ci
	jupyter-notebook-session-ci

[testenv]
passenv =
	NEO4J_URI
	NEO4J_USER
	NEO4J_PASSWORD
	NEO4J_DB
	NEO4J_AURA_DB_URI
allowlist_externals =
	ruby
	bash
	rm
deps =
	-r {toxinidir}/requirements/dev/test.txt
	neo4j4: neo4j >= 4.4.2, < 5.0
	neo4j5: neo4j >= 5.0, < 6.0
	pandas1: pandas >= 1.0, < 2.0
	pandas1: numpy == 1.24.3
	pandas2: pandas >= 2.2.2, < 3.0
	pandas2: numpy >= 2.0
	pyarrow16: pyarrow >= 16.0, < 17.0
	pyarrow17: pyarrow >= 17.0, < 18.0
	pyarrow18: pyarrow >= 18.0, < 19.0
	pyarrow19: pyarrow >= 19.0, < 20.0
	networkx2: networkx >= 2.0, < 3.0
	networkx3: networkx >= 3.0, < 4.0
commands =
	standard: bash -ec 'pytest graphdatascience/tests --include-enterprise --include-model-store-location && ruby ./doc/tests/test_docs.rb python3 -n test_enterprise && pytest ./doc/tests/test_client_only_endpoints.py'
	encrypted: pytest graphdatascience/tests --encrypted-only
	aura: pytest graphdatascience/tests --include-enterprise --target-aura
	ogb: pytest graphdatascience/tests --include-enterprise --include-ogb
	nx: bash -ec 'pytest graphdatascience/tests/*/test_nx_loader.py --include-enterprise && ruby ./doc/tests/test_docs.rb python3 -n test_networkx'
	cloud-architecture: pytest graphdatascience/tests --include-cloud-architecture
	rm -rf {envdir}/lib

[testenv:jupyter-notebook-ci]
passenv =
	NEO4J_URI
	NEO4J_USER
	NEO4J_PASSWORD
	NEO4J_DB
deps =
	-r {toxinidir}/requirements/dev/notebook-ci.txt
commands =
	python ./scripts/run_notebooks.py

[testenv:jupyter-notebook-session-ci] # see examples/.env.template for expected environment variables
passenv =
	AURA_ENV

	AURA_API_CLIENT_ID
	AURA_API_CLIENT_SECRET
	AURA_API_PROJECT_ID

	AURA_DB_ADDRESS
	AURA_DB_USER
	AURA_DB_PW
deps =
	-r {toxinidir}/requirements/dev/notebook-aura-ci.txt
commands =
	python ./scripts/run_notebooks.py sessions-attached


[testenv:jupyter-notebook-session-self-managed-db-ci]
passenv =
	AURA_ENV

	AURA_API_CLIENT_ID
	AURA_API_CLIENT_SECRET
	AURA_API_PROJECT_ID

	NEO4J_URI
	NEO4J_USER
	NEO4J_PASSWORD
deps =
	-r {toxinidir}/requirements/dev/notebook-aura-ci.txt
commands =
	python ./scripts/run_notebooks.py sessions-self-managed-db
